<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hang.common.mapper.FoManagerMapper" >
  <resultMap id="BaseResultMap" type="com.hang.common.domain.FoManager" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="uname" property="uname" jdbcType="VARCHAR" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
    <result column="locking" property="locking" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, uname, group_id, locking, number, login_ip, login_time, ctime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fo_manager
    where id = #{id,jdbcType=INTEGER}
  </select>

  <!--查询管理员总数-->
  <select id="selectByCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    SELECT COUNT(id) as total
    FROM fo_manager
  </select>

  <!--根据用户名查询单条数据-->
  <select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from fo_manager
    where username = #{username}
    <if test="id != null">
      AND id != #{id}
    </if>
  </select>

  <!--管理员列表-->
  <select id="selectByList" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from fo_manager
    where 1 = 1
    <if test="groupId != null">
      AND group_id = #{groupId}
    </if>
    <if test="search != null">
      AND username LIKE CONCAT(CONCAT('%', #{search}),'%') OR uname LIKE  CONCAT(CONCAT('%', #{search}),'%')
    </if>
    ORDER by id ASC
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fo_manager
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hang.common.domain.FoManager" >
    insert into fo_manager (id, username, password, 
      uname, group_id, locking, 
      number, login_ip, login_time, 
      ctime)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{uname,jdbcType=VARCHAR}, #{groupId,jdbcType=INTEGER}, #{locking,jdbcType=BIT}, 
      #{number,jdbcType=INTEGER}, #{loginIp,jdbcType=VARCHAR}, #{loginTime,jdbcType=TIMESTAMP}, 
      #{ctime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hang.common.domain.FoManager" >
    insert into fo_manager
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="uname != null" >
        uname,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="locking != null" >
        locking,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="loginIp != null" >
        login_ip,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="uname != null" >
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="locking != null" >
        #{locking,jdbcType=BIT},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null" >
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hang.common.domain.FoManager" >
    update fo_manager
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="uname != null" >
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="locking != null" >
        locking = #{locking,jdbcType=BIT},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null" >
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hang.common.domain.FoManager" >
    update fo_manager
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      uname = #{uname,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=INTEGER},
      locking = #{locking,jdbcType=BIT},
      number = #{number,jdbcType=INTEGER},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      ctime = #{ctime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>